gsub("[()]", "", df)
str(df)
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
str(df)
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:])
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:11])
str(df)
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df[,c(4,5,6,7)] = apply(df[,c(4,5,6,7), 2, function(x) as.Date(x), format = "%d-%b-%y"])
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df[,c(4,5,6,7)] = apply(df[,c(4,5,6,7), 2, FUN = function(x) as.Date(x), format = "%d-%b-%y"])
?apply
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df[,c(4,5,6,7)] = apply(df[,c(4,5,6,7), 2, FUN = function(x){as.Date(x)}, format = "%d-%b-%y"])
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df[,c(4,5,6,7)] = apply(df[,c(4,5,6,7), 2, function(x){as.Date(x)}, format = "%d-%b-%y"])
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df[,c(4,5,6,7)] = apply(df[,c(4,5,6,7), 2, FUN = function(x) as.Date(x), format = "%d-%b-%y"])
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:11])
str(df)
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
str(df)
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df[,c(4,5,6,7)] = apply(df[,c(4,5,6,7)], 2, FUN = function(x) as.Date(x), format = "%d-%b-%y")
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], 2, FUN = function(x) as.Date(x), format = "%d-%b-%y")
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], 2, FUN = function(x) as.Date(x), format = "%d-%b-%y")
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df[,c(4,5,6,7)] = sapply(df[,c(4,5,6,7)], 2, FUN = function(x) as.Date(x), format = "%d-%b-%y")
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], 2, FUN = function(x) as.Date(x), format = "%d-%b-%y")
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], FUN = function(x) as.Date(x), format = "%d-%b-%y")
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
#df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], FUN = function(x) as.Date(x), format = "%d-%b-%y")
#df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
#df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
#df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
#df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:11])
df[,c(8,9,10)] = lapply(df[,c(8,9,10)], 2, FUN = function(x) as.numeric(x), ])
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
#df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], FUN = function(x) as.Date(x), format = "%d-%b-%y")
#df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
#df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
#df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
#df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:11])
df[,c(8,9,10)] = lapply(df[,c(8,9,10)] FUN = function(x) as.numeric(x), ])
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
#df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], FUN = function(x) as.Date(x), format = "%d-%b-%y")
#df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
#df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
#df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
#df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:11])
df$project.budget = as.numeric(df$project.budget)
str(df)
df$project.budget = as.numeric(df$project.budget)
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
#df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], FUN = function(x) as.Date(x), format = "%d-%b-%y")
#df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
#df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
#df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
#df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:11])
df$project.budget = as.numeric(df$project.budget)
df$cumulative.disbursements = as.numeric(df$cumulative.disbursements)
df$undisbursed.amount = as.numeric(df$undisbursed.amount)
str(df)
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
#df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], FUN = function(x) as.Date(x), format = "%d-%b-%y")
df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:11])
df$project.budget = as.numeric(df$project.budget)
df$cumulative.disbursements = as.numeric(df$cumulative.disbursements)
df$undisbursed.amount = as.numeric(df$undisbursed.amount)
str(df)
str(df)
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
#df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], FUN = function(x) as.Date(x), format = "%d-%b-%y")
df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:11])
df[,c(8,9,10)] %<>% lapply(function(x) as.numeric(as.character(x)))
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
#df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], FUN = function(x) as.Date(x), format = "%d-%b-%y")
df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:11])
df[,8:10)] = lapply(df[,8:10], as.numeric))
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
#df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], FUN = function(x) as.Date(x), format = "%d-%b-%y")
df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:11])
df[,8:10] = lapply(df[,8:10], as.numeric))
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
#df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], FUN = function(x) as.Date(x), format = "%d-%b-%y")
df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:11])
df[,8:10] = lapply(df[,8:10], as.numeric)
# df$project.budget = as.numeric(df$project.budget)
# df$cumulative.disbursements = as.numeric(df$cumulative.disbursements)
# df$undisbursed.amount = as.numeric(df$undisbursed.amount)
str(df)
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
#df[,c(4,5,6,7)] = lapply(df[,c(4,5,6,7)], FUN = function(x) as.Date(x), format = "%d-%b-%y")
# df$approval.date = as.Date(df$approval.date, format="%d-%b-%y")
# df$implementation.start.date = as.Date(df$implementation.start.date, format="%d-%b-%y")
# df$original.completion.date = as.Date(df$original.completion.date, format="%d-%b-%y")
# df$revised.completion.date = as.Date(df$revised.completion.date, format="%d-%b-%y")
gsub("log\\(", "", df[,8:11])
df[,4:7] = lapply(df[,4:7], as.Date, format = "%d-%b-%y")
df[,8:10] = lapply(df[,8:10], as.numeric)
# df$project.budget = as.numeric(df$project.budget)
# df$cumulative.disbursements = as.numeric(df$cumulative.disbursements)
# df$undisbursed.amount = as.numeric(df$undisbursed.amount)
str(df)
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
gsub("log\\(", "", df[,8:11])
df[,4:7] = lapply(df[,4:7], as.Date, format = "%d-%b-%y")
df[,8:10] = lapply(df[,8:10], as.numeric)
df[df$approval.date > df$implementation.start.date | df$approval.date > df$implementation.start.date | df$approval.date > df$original.completion.date | df$revised.completion.date]
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
gsub("log\\(", "", df[,8:11])
df[,4:7] = lapply(df[,4:7], as.Date, format = "%d-%b-%y")
df[,8:10] = lapply(df[,8:10], as.numeric)
str(df)
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("Copy of datasetforCS112 - TA.csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("Copy of datasetforCS112 - TA (1).csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
gsub("log\\(", "", df[,8:11])
df[,4:7] = lapply(df[,4:7], as.Date, format = "%d-%b-%y")
df[,8:10] = lapply(df[,8:10], as.numeric)
str(df)
print(How many unique projects are represented in this data set?)
print("How many unique projects are represented in this data set?"")
print("How many unique projects are represented in this data set?")
#df2 = read.csv("datasetforCS112 - TA.csv"
df = read.csv("Copy of datasetforCS112 - TA (2).csv", colClasses = c("integer", "factor", "factor", "character", "character", "character", "character", "character", "character", "character", "factor"), na.strings = c("-","(0.000)"), header = TRUE)
gsub("log\\(", "", df[,8:11])
df[,4:7] = lapply(df[,4:7], as.Date, format = "%d-%b-%y")
df[,8:10] = lapply(df[,8:10], as.numeric)
str(df)
df = df
library(arm)
library(Matching)
data(lalonde)
# Get dataset with only control group
to_be_excluded <- which(lalonde$treat == 1)
df <- lalonde[-to_be_excluded, ]
# Fit the linear model
lm1 <- lm(re78~age+educ+re74+re75+I(educ*re74) +I(educ*re75)+I(age*re74)+I(age*re75)+I(re74*re75), data=df)
# Simulate 10000 predictions
sim_results <- sim(lm1, n.sims = 10000)
age_values <- min(df$age):max(df$age)
age_range <- length(age_values)
# Hold educ, re74, and re75 at their medians
simulated_ys_median <- list()
educ_val_median = median(df$educ)
re74_val_median = median(df$re74)
re75_val_median = median(df$re75)
for (i in 1:10000) {
simulated_ys_median[[i]] <-
sim_results@coef[i,1]*rep(1, age_range) +
sim_results@coef[i,2]*age_values +
sim_results@coef[i,3]*rep(educ_val_median, age_range)+
sim_results@coef[i,4]*rep(re74_val_median, age_range)+
sim_results@coef[i,5]*rep(re75_val_median, age_range)+
sim_results@coef[i,6]*rep(educ_val_median*re74_val_median, age_range)+
sim_results@coef[i,7]*rep(educ_val_median*re75_val_median, age_range)+
sim_results@coef[i,8]*age_values*rep(re74_val_median, age_range)+
sim_results@coef[i,9]*age_values*rep(re75_val_median, age_range)+
sim_results@coef[i,10]*rep(re74_val_median*re75_val_median, age_range)+
rnorm(age_range, 0, sim_results@sigma[i])
}
median_left <- vector()
median_right <- vector()
median_mean <- vector()
library(arm)
library(Matching)
data(lalonde)
# Get dataset with only control group
to_be_excluded <- which(lalonde$treat == 1)
df <- lalonde[-to_be_excluded, ]
# Fit the linear model
lm1 <- lm(re78~age+educ+re74+re75+I(educ*re74) +I(educ*re75)+I(age*re74)+I(age*re75)+I(re74*re75), data=df)
# Simulate 10000 predictions
sim_results <- sim(lm1, n.sims = 10000)
age_values <- min(df$age):max(df$age)
age_range <- length(age_values)
# Hold educ, re74, and re75 at their medians
simulated_ys_median <- list()
educ_val_median = median(df$educ)
re74_val_median = median(df$re74)
re75_val_median = median(df$re75)
for (i in 1:10000) {
simulated_ys_median[[i]] <-
sim_results@coef[i,1]*rep(1, age_range) +
sim_results@coef[i,2]*age_values +
sim_results@coef[i,3]*rep(educ_val_median, age_range)+
sim_results@coef[i,4]*rep(re74_val_median, age_range)+
sim_results@coef[i,5]*rep(re75_val_median, age_range)+
sim_results@coef[i,6]*rep(educ_val_median*re74_val_median, age_range)+
sim_results@coef[i,7]*rep(educ_val_median*re75_val_median, age_range)+
sim_results@coef[i,8]*age_values*rep(re74_val_median, age_range)+
sim_results@coef[i,9]*age_values*rep(re75_val_median, age_range)+
sim_results@coef[i,10]*rep(re74_val_median*re75_val_median, age_range)+
rnorm(age_range, 0, sim_results@sigma[i])
}
median_left <- vector()
median_right <- vector()
median_mean <- vector()
sim_results
simulated_ys_median
median_mean
str(simulated_ys_median)
length(simulated_ys_median[[1]])
length(simulated_ys_median[[2]])
length(simulated_ys_median[[3]])
length(simulated_ys_median[[4]])
simulated_ys_median[[1]]
library(arm)
library(Matching)
data(lalonde)
df = lalonde[lalonde$treat == 0,]
lm.fit = lm(re78 ~ age + educ + re74 + re75 + educ:re74 + educ:re75 + age:re74 + age:re75 + re74:re75, data = df)
sims = sim(lm.fit, n.sims = 10000)
ninety = function(x){quantile(x, probs = (0.90))}
A = matrix(, nrow = 10000, ncol = length(max(df$age):min(df$age)))
for (i in 1:10000){A[i,] = sims@coef[i,1] +
sims@coef[i,2]*min(df$age):max(df$age) +
sims@coef[i,3]*median(df$educ) +
sims@coef[i,4]*median(df$re74) +
sims@coef[i,5]*median(df$re75) +
sims@coef[i,6]*median(df$educ)*median(df$re74) +
sims@coef[i,7]*median(df$educ)*median(df$re75) +
sims@coef[i,8]*min(df$age):max(df$age)*median(df$re74) +
sims@coef[i,9]*min(df$age):max(df$age)*median(df$re75) +
sims@coef[i,10]*median(df$re74)*median(df$re75) +
rnorm(length(max(df$age) - min(df$age)), 0, sims@sigma[i]) }
A
getwd()
setwd(dir = "../Library/Mobile Documents/com~apple~CloudDocs/3rd Year/CS112/Assignment/Final Project/")
gwd()
getwd()
rm(list=ls())
df = read.csv("2001_Table1ALL.csv")
View(df)
df2 = read.table("MANIFEST.TXT")
table1 = read.csv("2001_Table1ALL.csv")
table2replication = read.csv("Table 2 Replication Data.csv")
table2extension = read.csv("Table 2 Extension Data.csv")
names(table2extension)
names(table2replication)
table1 = read.csv("2001_Table1ALL.csv")
table2replication = read.csv("Table 2 Replication Data.csv")
table2extension = read.csv("Table 2 Extension Data.csv")
names(table2extension)
names(table2replication)
names(table1)
names(table2extension)
str(table2extension)
names(table2replication)
str(table2replication)
View(table2replication)
source('~/Downloads/Stand+Your+Ground+Extension+Paper.R', echo=TRUE)
causeofdeath = read.table("Multiple Cause of Death, 1999-2016.txt")
source('~/Downloads/Stand+Your+Ground+Extension+Paper.R', echo=TRUE)
source('~/Downloads/Stand+Your+Ground+Extension+Paper.R', echo=TRUE)
alldata <- read.csv("2001_Table1ALL.csv")
alldata$Rate <- alldata$Deaths/alldata$StdPop
allhom <-subset(alldata, Cause=="AllHomicide")
FloridaHomOrig <- subset(allhom, Treatment ==1 & OrigData ==1)
ControlHomOrig <- subset(allhom, Treatment ==0 & OrigData ==1)
mean(FloridaHomOrig$Deaths[FloridaHomOrig$Effective==0]) ##Florida before
mean(FloridaHomOrig$Deaths[FloridaHomOrig$Effective==1]) ##Florida after
mean(ControlHomOrig$Deaths[ControlHomOrig$Effective==0]) ##Control States before
mean(ControlHomOrig$Deaths[ControlHomOrig$Effective==1]) ##Control States after
alldata <- read.csv("2001_Table1ALL.csv")
alldata$Rate <- alldata$Deaths/alldata$StdPop
alldata <- read.csv("2001_Table1ALL.csv")
alldata$Rate <- alldata$Deaths/alldata$StdPop
#subset Data
allhom <-subset(alldata, Cause=="AllHomicide")
FloridaHomOrig <- subset(allhom, Treatment ==1 & OrigData ==1)
ControlHomOrig <- subset(allhom, Treatment ==0 & OrigData ==1)
# Mean Monthly Counts - Original
mean(FloridaHomOrig$Deaths[FloridaHomOrig$Effective==0]) ##Florida before
mean(FloridaHomOrig$Deaths[FloridaHomOrig$Effective==1]) ##Florida after
mean(ControlHomOrig$Deaths[ControlHomOrig$Effective==0]) ##Control States before
mean(ControlHomOrig$Deaths[ControlHomOrig$Effective==1]) ##Control States after
# Mean Rate Counts
mean(FloridaHomOrig$Rate[FloridaHomOrig$Effective==0]) #Florida Before
mean(FloridaHomOrig$Rate[FloridaHomOrig$Effective==1]) #Florida After
mean(ControlHomOrig$Rate[ControlHomOrig$Effective==0]) ##Control States before
mean(ControlHomOrig$Rate[ControlHomOrig$Effective==1]) ##Control States after
View(allgom)
View(allhom)
# Subset Data
firehom <- subset(alldata, Cause=="FirearmHomicide")
FFireHomOrig <- subset(firehom, Treatment ==1 & OrigData ==1)
CSFireHomOrig <- subset(firehom, Treatment ==0 & OrigData ==1)
# Mean Monthly Counts
mean(FFireHomOrig$Deaths[FFireHomOrig$Effective==0]) ##Florida before
mean(FFireHomOrig$Deaths[FFireHomOrig$Effective==1]) ##Florida after
mean(CSFireHomOrig$Deaths[CSFireHomOrig$Effective==0]) ##Control States before
mean(CSFireHomOrig$Deaths[CSFireHomOrig$Effective==1]) ##Control States after
# Mean Rate Counts
mean(FFireHomOrig$Rate[FFireHomOrig$Effective==0]) #Florida Before
mean(FFireHomOrig$Rate[FFireHomOrig$Effective==1]) # Florida After
mean(CSFireHomOrig$Rate[CSFireHomOrig$Effective==0]) ##Control States before
mean(CSFireHomOrig$Rate[CSFireHomOrig$Effective==1]) ##Control States after
install.packages("Synth")
library(Synth)
demo(synth)
?synth
data("synth.data")
rm(list = ls())
data("synth.data")
data("synth.data")
data("basqye")
data("basque")
synth.data
dataprep.out <-
dataprep(
foo = basque
,predictors= c("school.illit",
"school.prim",
"school.med",
"school.high",
"school.post.high"
,"invest"
)
,predictors.op = c("mean")
,dependent     = c("gdpcap")
,unit.variable = c("regionno")
,time.variable = c("year")
,special.predictors = list(
list("gdpcap",1960:1969,c("mean")),
list("sec.agriculture",seq(1961,1969,2),c("mean")),
list("sec.energy",seq(1961,1969,2),c("mean")),
list("sec.industry",seq(1961,1969,2),c("mean")),
list("sec.construction",seq(1961,1969,2),c("mean")),
list("sec.services.venta",seq(1961,1969,2),c("mean")),
list("sec.services.nonventa",seq(1961,1969,2),c("mean")),
list("popdens",1969,c("mean")))
,treatment.identifier  = 17
,controls.identifier   = c(2:16,18)
,time.predictors.prior = c(1964:1969)
,time.optimize.ssr     = c(1960:1969)
,unit.names.variable   = c("regionname")
,time.plot            = c(1955:1997)
)
dataprep.out
1. combine highest and second highest
# 1. combine highest and second highest
# schooling category and eliminate highest category
dataprep.out$X1["school.high",] <-
dataprep.out$X1["school.high",] +
dataprep.out$X1["school.post.high",]
dataprep.out$X1                 <-
as.matrix(dataprep.out$X1[
-which(rownames(dataprep.out$X1)=="school.post.high"),])
dataprep.out$X0["school.high",] <-
dataprep.out$X0["school.high",] +
dataprep.out$X0["school.post.high",]
dataprep.out$X0                 <-
dataprep.out$X0[
-which(rownames(dataprep.out$X0)=="school.post.high"),]
# 2. make total and compute shares for the schooling catgeories
lowest  <- which(rownames(dataprep.out$X0)=="school.illit")
highest <- which(rownames(dataprep.out$X0)=="school.high")
dataprep.out$X1[lowest:highest,] <-
(100 * dataprep.out$X1[lowest:highest,]) /
sum(dataprep.out$X1[lowest:highest,])
dataprep.out$X0[lowest:highest,] <-
100 * scale(dataprep.out$X0[lowest:highest,],
center=FALSE,
scale=colSums(dataprep.out$X0[lowest:highest,])
)
# run synth
synth.out <- synth(data.prep.obj = dataprep.out)
# Get result tables
synth.tables <- synth.tab(
dataprep.res = dataprep.out,
synth.res = synth.out
)
print(synth.tables)
# plot results:
# path
path.plot(synth.res = synth.out,
dataprep.res = dataprep.out,
Ylab = c("real per-capita GDP (1986 USD, thousand)"),
Xlab = c("year"),
Ylim = c(0,13),
Legend = c("Basque country","synthetic Basque country"),
)
## gaps
gaps.plot(synth.res = synth.out,
dataprep.res = dataprep.out,
Ylab = c("gap in real per-capita GDP (1986 USD, thousand)"),
Xlab = c("year"),
Ylim = c(-1.5,1.5),
)
View(synth.data)
View(basque)
genout <- GenMatch(Tr=treat, X=X, BalanceMatrix=BalanceMat)
library(rgenoud)
genout <- GenMatch(Tr=treat, X=X, BalanceMatrix=BalanceMat)
data(lalonde)
attach(lalonde)
genout <- GenMatch(Tr=treat, X=X, BalanceMatrix=BalanceMat)
rm(list = ls())
data(lalonde)
attach(lalonde)
library(Matching)
genout <- GenMatch(Tr=treat, X=X, BalanceMatrix=BalanceMat)
data(lalonde)
attach(lalonde)
library(Matching); library(MatchIt)
genout <- GenMatch(Tr=treat, X=X, BalanceMatrix=BalanceMat)
data(lalonde)
attach(lalonde)
library(Matching); library(MatchIt); library(rgenoud)
genout <- GenMatch(Tr=treat, X=X, BalanceMatrix=BalanceMat)
?GenMatch
data(lalonde)
attach(lalonde)
library(Matching); library(MatchIt); library(rgenoud); library(Match)
data(lalonde)
attach(lalonde)
library(Matching); library(MatchIt); library(rgenoud);
genout <- GenMatch(Tr=treat, X=X, BalanceMatrix=BalanceMat)
atrix=BalanceMat)
genout <- GenMatch(Tr=treat, X=X, BalanceMatrix=BalanceMat)
treat
genout <- GenMatch(Tr=treat, X=X, BalanceMatrix=BalanceMat)
names(lalonde)
X = c(age, educ, black, hispan, married, nodegree, re74, re75)
X = c(age, educ, black, hispan, married, nodegree, re74, re75)
X
X = cbind(age, educ, black, hispan, married, nodegree, re74, re75)
X
X = cbind(age, educ, black, hispan, married, nodegree, re74, re75)
?GenMatch
